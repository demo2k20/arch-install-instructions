# Set keyboard layout
loadkeys hu

# Set up networking
wifi-menu
ping google.com
 
# Update the system clock
timedatectl set-ntp true
timedatectl status

# Partition the disk
cfdisk (UEFI: GPT; Legacy: DOS; 512MB Efi System (UEFI ONLY); restGB Linux Filesystem; 150% of ramGB for swap)

# Format the partitions
mkfs.vfat /dev/sdx1 # Only for UEFI
mkfs.ext4 /dev/sdx2
mkswap /dev/sdx3
swapon /dev/sdx3
mount /dev/sdx2 /mnt
mkdir /mnt/boot # Only for UEFI
mount /dev/sdx1 /mnt/boot # Only for UEFI (mount the EFI partition)

# Update the mirror list
pacman -Sy reflector
reflector --verbose --latest 5 --sort rate --save /etc/pacman.d/mirrorlist

# Install the base system
pacstrap /mnt base base-devel linux linux-firmware intel-ucode neovim networkmanager

# Generate fstab
genfstab -U /mnt >> /mnt/etc/fstab

# Change root into the installed system
arch-chroot /mnt

# Link a timezone to the system
ln -sf /usr/share/zoneinfo/Europe/Bucharest /etc/localtime
hwclock --systohc

# Set the locale
vim /etc/locale.gen # Uncomment "en_US.UTF-8 UTF-8"
locale-gen

# Set the langauge
echo "LANG=en_US.UTF-8" > /etc/locale.conf

# Set the tty keyboard layout
echo "KEYMAP=hu" > /etc/vconsole.conf

# Set the system's hostname
echo "hostname" > /etc/hostname
vim /etc/hosts
127.0.0.1	localhost
::1		localhost
127.0.1.1	*myhostname*.localdomain	*myhostname*

# Enable NetworkManager
systemctl enable NetworkManager

# Setup root and user accounts
passwd # Create the root account's password
useradd -mG wheel,users,audio,video,optical,storage,power,rfkill username # Change username to the actual username
passwd username # Create the regular user's password
EDITOR=nvim visudo # Uncomment %wheel to give the user sudo privileges

# Install GRUB bootleader in Legacy
pacman -S grub
grub-install /dev/sdx
grub-mkconfig -o /boot/grub/grub.cfg

# Install GRUB bootloader in UEFI
pacman -S grub efibootmgr
mkdir /boot/efi
mount /dev/sdx1 /boot/efi
grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=GRUB
grub-mkconfig -o /boot/grub/grub.cfg
mkdir /boot/efi/EFI/BOOT
cp /boot/efi/EFI/GRUB/grubx64.efi /boot/efi/EFI/BOOT/BOOTX64.EFI
nvim /boot/efi/startup.nsh # Write: bcf boot add 1 fs0:\EFI\GRUB\grubx64.efi "GRUB" *NEWLINE* exit

# Exit chroot and reboot into system
exit
shutdown now # Remove USB drive at this point


# Necessary packages

# X server
xorg xorg-xinit

# GPU drivers
#
# Open Source NVIDIA
xf86-video-nouveau
#
# Proprietary NVIDIA
nvidia lib32-nvidia-utils (for steam)
sudo vim /etc/X11/xorg.conf.d/10-nvidia-drm-outputclass.conf

Section "OutputClass"
    Identifier "intel"
    MatchDriver "i915"
    Driver "modesetting"
EndSection

Section "OutputClass"
    Identifier "nvidia"
    MatchDriver "nvidia-drm"
    Driver "nvidia"
    Option "AllowEmptyInitialConfiguration"
    Option "PrimaryGPU" "yes"
    ModulePath "/usr/lib/nvidia/xorg"
    ModulePath "/usr/lib/xorg/modules"
EndSection

# Generic drivers
broadcom-wl libinput

# Fonts
noto-fonts ttf-font-awesome ttf-roboto-mono

# Audio
pulseaudio pulseaudio-alsa pavucontrol 

# Window manager
bspwm sxhkd

# Bar
polybar-git

# Terminal Emulator
termite

# Browser
firefox

# Shell
zsh

# Useful programs
network-manager-applet trash-cli acpilight htop pulsemixer imagemagick maim mlocate gvfs

# Showoff programs
cli-visualizer lolcat sl neofetch cmatrix tree figlet toilet

# Regular programs
qbittorrent-dark-git ranger python-ueberzug-git zathura zathura-pdf-poppler feh rofi i3lock compton lxappearance arandr file-roller mpv

echo "exec bspwm" > ~/.xinitrc
startx

setxkbmap -model abnt2 -layout hu
localectl set-x11-keymap hu
localectl status

github.com/demo2k20/dotfiles
